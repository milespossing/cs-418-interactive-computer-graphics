Need basic game state frame loop:

1. Initialize game state
2. Begin game loop:
  1. Check user inputs
  2. increment state s with inputs into s'
    1. State incrementation should be an arbitrary-length composition of n
    functions of type State S => S -> S
  3. Render gamestate s'

  Notes for myself
    
    It would be nice, had I been using some kind of typescript FP framework
    to define some kind of Option type which either has NoOp, or SomeOp.

    The monoid concat of these should be (NoOp, NoOp) -> NoOp, (SomeOp, _) -> SomeOp


Game state

- Player location
- Player View [20]
- Movement mode (vehicular movement) [15]

- Need some kind of nice way to rotate player view in the state transformation

OBJ Loading

Need a way to load OBJ files in. Only do one: triangle.obj. This will total up to 50
optional points

Rendering

Now that we've gotten rendering with the textures, it's time to get the textures in
to the model itself. On model creating we'll have to map the (x,y) coordinates of the
terrain to some square segment of the texture

There seems to be an issue related to rendering close to the object. We see
the object get darker as we get closer to it
